name: EVETrade API Dev Deployment

# Controls when the workflow will run
on:
  push:
    branches:
      - feature/ground_up_python_refactor # TODO switch to develop branch
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test_evetrade_api:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install and Configure poetry
        run: |
          python -m pip install poetry==1.3.2
          python -m poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m poetry install

      - name: Generate Lambda Layer
        run: |
          cd .venv/lib/python3.9/site-packages
          zip -r ../../../../evetrade-api-layer.zip .
          cd ../../../../

      - name: Generate Deployment Package
        run: |
          zip -r evetrade-api-deployment.zip api

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to Lambda Function to Latest
        run: |
          aws lambda update-function-code --function-name evetrade_api --zip-file fileb://evetrade-api-deployment.zip
      
      - name: Update Release
        env: # Or as an environment variable
          GH_USER: ${{ secrets.GH_USER }}
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
        run: |
          export today=$(date +"%Y%m%d")
          git config --global user.email "${GH_EMAIL}"
          git config --global user.name "${GH_USER}"
          gh release create $today --title "Lambda Layer $today" --notes "Lambda Layer $today" evetrade-api-layer.zip